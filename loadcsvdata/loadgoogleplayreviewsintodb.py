"""Loads a CSV file into a nominated SQLite3 database.

The csv file is generated by Google Play Developer Console and
downloaded to the local machine prior to loading the file. The
database is expected to already have the reviews table.

Limitations: no known deduping or data validation.
"""
from __future__ import print_function
import argparse
import csv
import sqlite3

def load_csv_contents_into_sqllite(csv_filename, database_name):
    """Load the contents of a CSV file into an existing database."""

    with open(csv_filename, 'r', encoding='utf16') as csvf:
        has_header = csv.Sniffer().has_header(csvf.read(1024))
        csvf.seek(0)
        incsv = csv.reader(csvf)
        if has_header:
            next(incsv)
        with sqlite3.connect(database_name) as conn:
            cursor = conn.cursor()
            cursor.executemany(
                'insert into reviews values '
                '(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)',
                incsv)
        conn.close()

if __name__ == "__main__":
    PARSER = argparse.ArgumentParser()
    PARSER.add_argument("csvfilewithreviews",
                        help="File with reviews downloaded from Google Play "
                             "Developer Console in CSV format.")
    PARSER.add_argument("db", help="Existing SQLite3 database to add reviews to.")
    INPUTS = PARSER.parse_args()
    print(INPUTS.csvfilewithreviews)
    print(INPUTS.db)
    load_csv_contents_into_sqllite(INPUTS.csvfilewithreviews, INPUTS.db)
